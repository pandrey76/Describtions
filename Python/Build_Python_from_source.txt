Как собрать Python из исходного кода на Linux.
Иногда в вашем дистрибутиве Linux нет последней версии Python, или, может быть, вы просто хотите самостоятельно
собрать последнюю, лучшую версию. Вот шаги, которые необходимо предпринять для сборки Python из исходников:

Шаг 1. Загрузите исходный код
Для начала вам нужно получить исходный код Python. Python.org делает это довольно просто.
Если вы перейдете на страницу « Загрузки» , то вверху вы увидите последний исходный код Python 3.
Только убедитесь, что вы не используете устаревший Python, Python 2!

Когда вы выберете версию Python 3, вы увидите раздел «Файлы» внизу страницы. Выберите архив с исходным кодом Gzip и
загрузите его на свой компьютер. Если вы предпочитаете метод командной строки, вы можете использовать его wget
для загрузки файла в текущий каталог:

$ wget https://www.python.org/ftp/python/3.8.4/Python-3.8.4.tgz
Когда загрузка tarball завершится, вам нужно будет сделать несколько вещей, чтобы подготовить вашу систему к сборке
Python.

Шаг 2: Подготовьте вашу систему
Для создания Python с нуля необходимо выполнить несколько шагов, связанных с конкретным дистрибутивом.
Цель каждого шага одинакова для всех дистрибутивов, но вам может потребоваться перевести на свой дистрибутив,
если он не использует apt-get:

Сначала обновите диспетчер пакетов и обновите свои пакеты:

$ sudo apt-get update
$ sudo apt-get upgrade
Затем убедитесь, что у вас установлены все требования для сборки:

# For apt-based systems (like Debian, Ubuntu, and Mint)
$ sudo apt-get install -y make build-essential libssl-dev zlib1g-dev \
       libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm \
       libncurses5-dev libncursesw5-dev xz-utils tk-dev

# For yum-based systems (like CentOS)
$ sudo yum -y groupinstall "Development Tools"
$ sudo yum -y install gcc openssl-devel bzip2-devel libffi-devel
Это нормально, если в вашей системе уже установлены некоторые требования. Вы можете выполнить вышеуказанные команды,
и любые существующие пакеты не будут перезаписаны.

Теперь, когда ваша система готова к работе, пора приступить к созданию Python!

Шаг 3. Соберите Python
Когда у вас есть предварительные условия и файл TAR, вы можете распаковать исходный код в каталог. Обратите внимание, что следующая команда создаст новый каталог Python-3.8.3под тем, в котором вы находитесь:

$ tar xvf Python-3.8.4.tgz
$ cd Python-3.8.4
Теперь вам нужно запустить ./configureинструмент для подготовки сборки:

$ ./configure --enable-optimizations --with-ensurepip=install
enable-optimizations Флаг позволит некоторые оптимизации внутри Python ,
чтобы сделать его запустить около 10 процентов быстрее. Это может увеличить время компиляции
на двадцать или тридцать минут.
with-ensurepip=install Флаг будет устанавливать в pip комплекте с этой установкой.

Затем вы создаете Python, используя make. -j Вариант просто говорит , make чтобы разделить здание на параллельные шаги ,
чтобы ускорить компиляцию. Даже при параллельных сборках этот шаг может занять несколько минут:

$ make -j 8
Наконец, вы захотите установить новую версию Python. Здесь вы будете использовать altinstall цель,
чтобы избежать перезаписи системного Python.
Поскольку вы устанавливаете в /usr/bin, вам нужно будет запустить как root:
--
$ sudo make altinstalu

Установка может занять некоторое время. Как только это будет сделано, вы можете убедиться, что Python настроен правильно.

Шаг 4: Проверьте вашу установку
Убедитесь, что python3.8 --version команда возвращает последнюю версию:

$ python3.8 --version
Python 3.8.4
Если видите Python 3.8.4, значит, все готово!

Если у вас есть дополнительное время, вы также можете запустить набор тестов, чтобы убедиться, что все
работает правильно в вашей системе.

Чтобы запустить набор тестов, введите следующую команду:

$ python3.8 -m test
Вы, вероятно, захотите какое-то время заняться чем-нибудь еще, так как на вашем компьютере какое-то время будут
выполняться тесты. Если все тесты пройдены,
вы можете быть уверены, что ваша новая сборка Python работает должным образом!


Install python 3.7
mkdir ~/code

Build from source python 3.7, install with prefix to ~/.python folder:

wget https://www.python.org/ftp/python/3.7.3/Python-3.7.3.tgz ; \
tar xvf Python-3.7.* ; \
cd Python-3.7.3 ; \
mkdir ~/.python ; \
./configure --enable-optimizations --prefix=/home/www/.python ; \
make -j8 ; \
sudo make altinstall