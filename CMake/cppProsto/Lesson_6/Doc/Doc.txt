
        006. Уроки Cmake- Поиск необходимых библиотек-.mp4

    При генерации с помощью CMake можно выводить различные сообщения.

    Поиск необходимых пакетов и библиотек

    В проекте можно создать папку с именем "cmake" в ней, как правило, хранятся дополнительные скрипты с расширением
    ".cmake". Если не понятно как писать скрипты, то в папке куда установлен CMake можно найти эти стандартные скрипты
     для того же поиска и посмотреть корректный синтаксис. Также необходимо обращаться к документации
     (https://cmake.org/cmake/help/latest/manual/cmake-modules.7.html)

    File "CMakeLists.txt":

**********************************************************************************

make_minimum_required (VERSION 3.5)

# https://cmake.org/cmake/help/latest/manual/cmake-modules.7.html

project(package_find)

# Здесь мы дополнительно указываем дополнительные пути для поиска к модулям или к нужным скриптам
set(CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake/modules
                      ${CMAKE_MODULE_PATH})

set(all_found_result "ok")

# some actions
# Включаем модуль, в нашем случае: ${CMAKE_SOURCE_DIR}/cmake/modules/test.cmake
include(test)

# find package by own script
# Поиск OpenSSl (Установлен ли OpenSSL, установлен ли OpenSSL для разработчика, заголовочные файлы и т.д.), для этого
# CMake использует свои собственные скрипты:https://cmake.org/cmake/help/latest/manual/cmake-modules.7.html
# здесь представлен список всех имеющихся скриптов уже встроенных в CMake для поиска стандартных модулей.
# Если в этом списке отсутствуют необходимые пакеты, то скрипт поиска придётся писать самому.
# Для стандартного поиска в команду find_package надо передавать имя без предиката "Find". Например: FindMFC надо
# передать просто MFC.
find_package(_OpenSSL)

# Add an executable
add_executable(package_find main.cpp)

if(all_found_result STREQUAL "ok")
  message("all libraries was found")
else()
  message( FATAL_ERROR "Not all libraries was found!" )
endif()


# https://cmake.org/cmake/help/v3.0/command/message.html
message( STATUS         " status " )
message( WARNING        " warning " )
message( AUTHOR_WARNING " author warning " )
message( SEND_ERROR     " send error " )
message( DEPRECATION    " deprecation " )
message( FATAL_ERROR    " fatal error " )

**********************************************************************************


